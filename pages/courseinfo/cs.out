{"course_code": {"course_dept": "COSC", "course_number": "1"}, "course_title": "Introduction to Programming and Computation", "description": "This course introduces computational concepts that are fundamental to computer science and are useful for the sciences, social sciences, engineering, and digital arts. Students will write their own interactive programs to analyze data, process text, draw graphics, manipulate images, and simulate physical systems. Problem decomposition, program efficiency, and good programming style are emphasized throughout the course. No prior programming experience is assumed.", "xlists": [], "prereqs": [], "instructors": ["Kommineni (Fall)", "Kommineni (Winter)", "Campbell (Spring)"], "distribs": ["TLA"], "wc": null, "offered": ["Fall", "Spring", "Winter"]}
{"course_code": {"course_dept": "COSC", "course_number": "2"}, "course_title": "Programming for Interactive Audio-Visual Arts", "description": "This course presents topics related to interactive visual art generated on a computer. Although it briefly covers computer-generated media art, the course focuses on the programming skills required for creating interactive works. Rather than using commercial software, students write their own programs, using the Processing language, to create interactive visuals and compositions. The course introduces fundamental concepts of how to represent and manipulate color, two-dimensional shapes, images, motion, and video. Coursework includes short programming assignments to practice the concepts introduced during lectures and projects to explore visual compositions. The course assumes no prior knowledge of programming. This course is not open to students who have passed\u00a0COSC 1\u00a0or\u00a0ENGS 20\u00a0or who have received credit for one of these courses via the Advanced Placement exam or the local placement exam.", "xlists": ["MUS 008"], "prereqs": [], "instructors": ["Casey (Spring)"], "distribs": ["TLA"], "wc": null, "offered": ["Spring"]}
{"course_code": {"course_dept": "COSC", "course_number": "10"}, "course_title": "Problem Solving via Object-Oriented Programming", "description": "Motivated by problems that arise in a variety of disciplines, this course examines concepts and develops skills in solving computational problems. Topics covered include abstraction (how to hide details), modularity (how to decompose problems), data structures (how to efficiently organize data), and algorithms (procedures for solving problems). Laboratory assignments are implemented using object-oriented programming techniques.", "xlists": [], "prereqs": "COSC 1 or ENGS 20 or placement through AP or local placement.", "instructors": ["Pierson", "Quattrini Li (Fall)", "Pierson (Winter)", "Balkcom (Spring)"], "distribs": ["TLA"], "wc": null, "offered": ["Fall", "Spring", "Winter"]}
{"course_code": {"course_dept": "COSC", "course_number": "16"}, "course_title": "Introduction to Computational Neuroscience", "description": "Your brain is composed of low-precision, slow, sparsely-connected computing elements, yet it outperforms any extant computer on tasks ranging from perception to planning. Computational Neuroscience has as its twin goals the scientific understanding of how brains compute thought, and the engineering capability to reconstruct the identified computations. Topics in the class included anatomical circuit design, physiological operating rules, evolutionary derivation, mathematical analyses, and emergent behavior, as well as development of applications from robotics to medicine.", "xlists": ["COGS 021", "PSYC 040", "PSYC 1", "PSYC 6", "COSC 1", "ENGS 20."], "prereqs": "One of PSYC 1, PSYC 6, COSC 1, or ENGS 20.", "instructors": ["Granger"], "distribs": ["SCI"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "20"}, "course_title": "Motion Study: Using Motion Analysis for Science, Art and Medicine", "description": "Motion Capture is the process of recording movement in physical space and transforming that information into a digital form that can be analyzed and adapted. Recent technological advances have increased the use of motion capture in movies, cartoon animation, and scientific applications. In this class, students will learn the foundations of this new field from basic anatomical principles of motion to how motions express a variety of human qualities (e.g., status, emotion). Students will work with a motion capture system to record and analyze their own movement to gain a hands-on understanding of how motion capture can enhance art and science.", "xlists": [], "prereqs": [], "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "21"}, "course_title": "Foundations of Digital Design", "description": "This projects-based course will familiarize students with the fundamentals of digital design, including layout, typography, composition, color theory, and process. Foundational concepts and the universal principles of design will be explored through extensive analyses and a series of design projects. No previous art or technical experience is required. Work is evaluated on a set of technical and aesthetic criteria and class participation. Plan to meet during every X-Hour.", "xlists": [], "prereqs": [], "instructors": ["Mahoney"], "distribs": ["ART"], "wc": null, "offered": ["Spring"]}
{"course_code": {"course_dept": "COSC", "course_number": "22"}, "course_title": "3D Digital Modeling", "description": "This projects-based lab course teaches the principles and practices of 3D modeling. Anyone with an interest in learning how models and environments in film, games, and VR applications are made, this course is for you.\u00a0 We focus on modeling, shading, textures, lighting, and rendering, along with some dynamics, special effects, and animation. Students create environments and a fully rigged character model while learning their way around a state-of-the-art 3D animation program. Work will be evaluated on a set of technical and aesthetic criteria. Assignments are given weekly.\u00a0Plan to meet every X-Hour. No prior experience, coding or drawing skills needed.\u00a0COSC 22 and COSC\u00a024 can be taken in any order.", "xlists": [], "prereqs": [], "instructors": ["Loeb"], "distribs": ["TLA"], "wc": null, "offered": ["Fall", "Winter"]}
{"course_code": {"course_dept": "COSC", "course_number": "23.01"}, "course_title": "Augmented and Virtual Reality Design", "description": "This hands-on projects-based course exposes students to the aesthetic, technical, and societal issues surrounding the emerging frontiers of digitally mediated realities. Students learn the fundamentals of augmented and virtual reality design and are introduced to interactive development for VR/AR. COSC 23.01 and COSC 63.01 have class together and work together on teams. Designers in this course create assets and design the UI/UX while developers build interactive digital tools, games, and visualizations. This course is not open to students who have received credit for COSC 29.22 or COSC 89.22.", "xlists": [], "prereqs": "COSC 22", "instructors": ["Mahoney"], "distribs": ["TAS"], "wc": null, "offered": ["Fall", "Winter"]}
{"course_code": {"course_dept": "COSC", "course_number": "24"}, "course_title": "Computer Animation: The State of the Art", "description": "This hands-on course focuses on state-of-the-art computer animation, presenting techniques and principles of traditional animation and how they apply to 3D computer animation, motion capture, and dynamic simulations. Facial and full-body animation are covered through projects, readings, and presentations. Students will complete weekly assignments and a create short animation of their choosing. Students are given models and add weight, force, timing, and spacing to bring the models to life and simulate real-world physics. No prior experience needed. COSC 22 and COSC 24 can be taken in any order.", "xlists": [], "prereqs": [], "instructors": ["Hannaway"], "distribs": ["ART"], "wc": null, "offered": ["Winter"]}
{"course_code": {"course_dept": "COSC", "course_number": "25.01"}, "course_title": "Intro to UI/UX Design I", "description": "COSC 25.01 is a hands-on projects-based course that teaches the concepts, principles, and practice of User Interface (UI) and User Experience (UX) Design. It is designed for students with an interest in any form of design, although we focus on the UI/UX of digital tools (e.g. mobile, web, tablets). No previous experience or coding skills needed.\u00a0 Grading is based on weekly assignments, reflections, readings, and in-class exercises that build on each other and are intended to teach the foundational skills and thinking of UI/UX design. This team-based course requires a significant amount of time outside class.\u00a0 Students are encouraged (but not required) to take ENGS 12 prior to taking this course. Some students will go on to take COSC 25.02, an Independent Study course that allows students to put the skills learned in COSC 25.01 into practice as a designer in the DALI Lab or through work on another project.", "xlists": [], "prereqs": [], "instructors": ["Loeb"], "distribs": ["ART"], "wc": null, "offered": ["Spring"]}
{"course_code": {"course_dept": "COSC", "course_number": "25.02"}, "course_title": "Intro to UI/UX Design II", "description": "This Independent Study course offers students who have taken COSC 25.01 a chance to put what they learned in the classroom into practice.\u00a0 Students might work as a designer in the DALI Lab or on another project. In addition to completing a project as a designer, students design and build an online portfolio.", "xlists": [], "prereqs": "COSC 25.01 and Instructor Permission is required.", "instructors": ["Loeb"], "distribs": ["ART"], "wc": null, "offered": ["Fall", "Spring", "Winter"]}
{"course_code": {"course_dept": "COSC", "course_number": "27"}, "course_title": "Projects in Digital Arts", "description": "This is the culminating course for the Digital Arts Minor. Students complete projects in digital arts, including: computer animations; games, VR/AR applications, interactive digital installations and media. Students work in small teams to complete work of a high production quality or work that incorporates innovations in technology.\u00a0 Grades are based on aesthetic and technical criteria along with teamwork and adherence to weekly milestones.", "xlists": [], "prereqs": "COSC 22 and either COSC 24 or COSC 23.01", "instructors": ["Mahoney"], "distribs": ["ART"], "wc": null, "offered": ["Spring"]}
{"course_code": {"course_dept": "COSC", "course_number": "28"}, "course_title": "Advanced Projects in Digital Arts", "description": "This independent study course is for students who have completed all the courses in the Digital Arts minor and want to continue working on projects in digital arts or for students who want to stretch their skills in a new way. Projects may include computer animations, interactive digital arts, installations, or research projects. Students work alone or in teams. This course may be taken twice.", "xlists": [], "prereqs": "COSC 27 and permission of the instructor is required.", "instructors": ["Loeb"], "distribs": [], "wc": null, "offered": ["Fall", "Spring", "Winter"]}
{"course_code": {"course_dept": "COSC", "course_number": "29"}, "course_title": "Topics in Digital Arts", "description": "This course studies an advanced topic in Digital Arts that is not covered in the regular curriculum. Students may take this course multiple times, subject to the restriction that the topics are distinct.", "xlists": [], "prereqs": "Vary according to the topic. Consult with the instructor.", "instructors": [], "distribs": [], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "29.04"}, "course_title": "Impact Design", "description": "This innovative, team-based, project course is about impact--what it is, how you experience it, how you create it, how you measure it.\u00a0 We focus on designing products and experiences for community partners as part of the Social Impact Practicum program.\u00a0 Rather than looking at how we can solve a problem, we look at how we can create delight for users. Students will learn how to combine core principles from human psychology with the tools of design to create products and user experiences that promote engagement, adoption, and learning. Past community partners have included the Hartford Autism Regional Program (HARP) and the Aging Resource Center.", "xlists": ["PSYC 015"], "prereqs": [], "instructors": ["Loeb", "Wheatley"], "distribs": ["TMV"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "29.05"}, "course_title": "Digital Fabrication & Rapid Prototyping", "description": "Artists, designers, creators, and makers increasingly use digital fabrication methods in both two and three dimensions as a means of designing, rapid prototyping and manufacturing. This class uses digital fabrication tools in a studio setting. Students learn digital fabrication through a series of 2D and 3D design projects and through critical discussions of the aesthetic, sociological and practical implications of integrating digital tools and materiality into the design and build process. Students will have hands-on training in the process of creating and converting computer generated drawings and models into physical objects through the use of 2D and 3D scanners, laser-cutters, wire benders, cnc routers and 3D printers. No previous experience needed.", "xlists": [], "prereqs": [], "instructors": [], "distribs": [], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "30"}, "course_title": "Discrete Mathematics in Computer Science", "description": "This course develops the mathematical foundations of computer science that are not calculus-based. It covers basic set theory, logic, mathematical proof techniques, and a selection of discrete mathematics topics such as\u00a0 combinatorics (counting),\u00a0 discrete probability, number theory,and graph theory. The mathematics is frequently motivated using computer science applications.", "xlists": ["ENGS 066", "COSC 10", "COSC 1", "ENGS 20."], "prereqs": "Math 3 and COSC 10; or Math 3, Instructor Permission, and either COSC 1 or ENGS 20.", "instructors": ["Jayanti (Fall), Chang (Winter", "Spring)"], "distribs": ["QDS"], "wc": null, "offered": ["Fall", "Spring", "Winter"]}
{"course_code": {"course_dept": "COSC", "course_number": "31"}, "course_title": "Algorithms", "description": "A survey of fundamental algorithms and algorithmic techniques, including divide-and-conquer algorithms, dynamic programming, randomized algorithms, greedy algorithms, and graph algorithms. Presentation, implementation and formal analysis, including space/time complexity and proofs of correctness, are all emphasized.", "xlists": [], "prereqs": "COSC 10 and COSC 30. Students who have not taken COSC 30 but have a strong mathematical background may take COSC 31 with the instructor's permission.", "instructors": ["Jayanti (Winter)", "Chakrabarty (Spring)"], "distribs": ["QDS"], "wc": null, "offered": ["Fall", "Spring", "Winter"]}
{"course_code": {"course_dept": "COSC", "course_number": "32"}, "course_title": "Advanced Algorithms", "description": "This course follows up on our basic undergraduate-level algorithms course, covering a number of advanced topics and ideas in algorithm design and analysis. You will learn about the use of advanced data structures, amortized analysis, randomization, linear programming, and approximation. The focus will be on methodology and broadly-applicable fundamental principles, rather than specific problem domains.", "xlists": [], "prereqs": "An undergraduate-level course in Algorithms (such as COSC 31) and strong mathematics background.", "instructors": [], "distribs": ["QDS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "34"}, "course_title": "Randomized Algorithms", "description": "Randomness is one of the key resources in algorithm design. Many problems have faster algorithms if randomization is allowed, and indeed, for certain problems randomness is essential. The course will introduce the probability basics, the fundamental tools, and provide multiple applications in machine learning, big data, optimization, etc. Not open to students who have received credit for COSC 49.10.", "xlists": [], "prereqs": "COSC 31, COSC 30.", "instructors": [], "distribs": ["QDS"], "wc": null, "offered": ["Spring"]}
{"course_code": {"course_dept": "COSC", "course_number": "35"}, "course_title": "Data Stream Algorithms", "description": "This course studies algorithms that process massive amounts of data; so massive that they will not fit in a computer\u2019s storage. The course will cover a wide variety of techniques for summarizing such large amounts of data into succinct \u201csketches\u201d that nevertheless retain important and useful information. The course starts from the basics, assuming only a basic knowledge of algorithms, and builds up to advanced techniques from recent research. The necessary mathematical tools are developed within the course.", "xlists": [], "prereqs": "COSC 31 or permission of the instructor.", "instructors": [], "distribs": [], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "36"}, "course_title": "Approximation Algorithms", "description": "Many problems arising in computer science are NP-hard and therefore we do not expect efficient algorithms for solving them exactly. This has led to the study of approximation algorithms where algorithms are supposed to run fast but can return approximate solutions. This course provides a broad overview of the main techniques involved in designing and analyzing such algorithms. It also explores connections between algorithms and mathematical fields such as algebra, geometry, and probability.", "xlists": [], "prereqs": "A first course on algorithms and mathematical maturity to read and write proofs will be assumed. Prerequisite Courses: COSC 31, COSC 30.", "instructors": ["Chakrabarty"], "distribs": ["QDS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "39"}, "course_title": "Theory of Computation", "description": "This course serves as an introduction to formal models of languages and computation. Topics covered include finite automata, regular languages, context-free languages, pushdown automata, Turing machines, computability, and NP-completeness.", "xlists": [], "prereqs": "COSC 30 and/or COSC 31. Students who have not taken COSC 30 and/or 31, but have a strong mathematical background, may take COSC 39 with the instructor's permission.", "instructors": ["Chakrabarti"], "distribs": ["QDS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "40"}, "course_title": "Computational Complexity", "description": "This course covers the basics of computational complexity, whose broad goal is to classify computational problems into classes based on their inherent resource requirements. Five key computational resources are studied: time, space, nondeterminism, randomness, and interaction. Key concepts studied include reductions, the polynomial hierarchy, Boolean circuits, pseudorandomness and one-way functions, probabilistic proof systems, and hardness of approximation.", "xlists": [], "prereqs": "COSC 39 or equivalent. Students need to be familiar with the formalism of the Turing Machine and with the notion of NP-completeness.", "instructors": ["Chakrabarti"], "distribs": [], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "49"}, "course_title": "Topics in Algorithms and Complexity", "description": "This course studies an advanced topic in algorithms and complexity that is not covered in the regular curriculum. Students may take courses under this rubric multiple times, subject to the restriction that the topics are distinct. The subject material under this rubric differs from course to course depending on the instructor. Please refer to individual courses for detailed instruction.", "xlists": [], "prereqs": "Vary according to the topic.  Consult with the instructor.", "instructors": [], "distribs": ["QDS"], "wc": null, "offered": ["Fall", "Spring"]}
{"course_code": {"course_dept": "COSC", "course_number": "49.04"}, "course_title": "Concurrent Algorithms", "description": "We consider problems where multiple processes have to coordinate their activities to accomplish a task. For an example, suppose that there are many sensing agents on an aircraft and each agent, based on its reading of the environment, has a recommendation on whether the aircraft should keep straight, turn left, or turn right. Since different agents can have different recommendations, we would want a protocol by which they can arrive at an \"agreement\" on whether the plane should go left, right, or straight. How hard is it to design such a protocol? It turns out that if you want the protocol to be fault-tolerant, i.e., the protocol works correctly even if one of the agents stops communicating, it is impossible to design a correct protocol (under certain reasonable assumptions about the system). In the course, we will look at several fascinating coordination problems and solve them for several models of distributed computing: shared-memory versus message passing, synchronous versus asynchronous, fault-free versus fault-tolerant. We design algorithms, and prove lower bounds or even impossibility results. There will be weekly homework and a final exam. Prerequisite: COSC 31 (Undergraduate Algorithms) or equivalent, and an interest in algorithms/theory.", "xlists": [], "prereqs": "COSC 31 (Undergraduate Algorithms) or equivalent, and an interest in algorithms/theory.", "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "49.06"}, "course_title": "Approximation Algorithms", "description": "Many problems arising in computer science are NP-hard and therefore we do not expect polynomial time algorithms solving them exactly. This has led to the study of approximation algorithms where one relaxes the goal to return approximate solutions. Over the past three decades, a beautiful theory of approximation algorithms has emerged. This course will provide a broad overview of the main techniques and will often deep dive into the state-of-the-art.", "xlists": [], "prereqs": "COSC 31", "instructors": [], "distribs": ["QDS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "49.07"}, "course_title": "21st Century Algorithms", "description": "The new century has brought us a new class of computational problems and paradigms, and to tackle them a suite of new algorithmic ideas have emerged. In this course, we will look at a collection of such ideas which are fundamental and yet not covered in a first course in undergraduate algorithms. (For instance, in fact, almost all algorithms covered in CS 31 are from last century). A rough set of problems and ideas are: random sampling algorithms, sketching algorithms, streaming algorithms, clustering algorithms, learning algorithms, etc, etc.", "xlists": [], "prereqs": [], "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "49.08"}, "course_title": "Information Theory in Computer Science", "description": "This course introduces students to information theory, a mathematical formalism for quantifying and reasoning about communication. While traditionally a part of electrical engineering, it has found several powerful applications in the theory of algorithms and complexity and adjacent fields such as combinatorics and game theory. The first third of the course will teach students the basics of information theory (Shannon entropy, mutual information, Kullback-Liebler divergence). The rest of the course will sample topics from error correcting codes, communication complexity, data structures, and optimization, in each case highlighting applications of information theory.", "xlists": [], "prereqs": "COSC 31 or COSC 30 plus permission of the instructor (based on strong mathematical background)", "instructors": [], "distribs": [], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "49.09"}, "course_title": "Introduction to Computational Topology", "description": "Topology is the art of studying shapes without precise measurements. It is not surprising then that topology has found many applications in computer science, both in theoretical and applied research including algorithms and complexity theory, data analysis, robotics, computer graphics, etc., where often the input data is geometrically constrained, or noisy due to measurement errors. The course serves as an introduction to the rapidly growing area(s) of computational topology.", "xlists": [], "prereqs": "CS30 and CS31 and (MATH22 or MATH24 or Instructor Permission)", "instructors": ["Chang"], "distribs": ["QDS"], "wc": null, "offered": ["Fall"]}
{"course_code": {"course_dept": "COSC", "course_number": "49.10"}, "course_title": "Randomized Algorithms", "description": "Randomness is one of the key resources in algorithm design. Many problems have faster algorithms if randomization is allowed, and indeed, for certain problems randomness is essential. The course will introduce the probability basics, the fundamental tools, and provide multiple applications in machine learning, big data, optimization, etc.", "xlists": [], "prereqs": "A first course on algorithms and mathematical maturity to read and write proofs will be assumed. Prerequisite Courses: COSC 31, COSC 30.", "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "50"}, "course_title": "Software Design and Implementation", "description": "Techniques for building large, reliable, maintainable, and understandable software systems. Topics include UNIX tools and filters, programming in C, software testing, debugging, and teamwork in software development. Concepts are reinforced through a small number of medium-scale programs and one team programming project.", "xlists": ["ENGS 050", "COSC 10"], "prereqs": "COSC 10", "instructors": ["Palmer", "Prioleau (Winter)", "Palmer (Spring)"], "distribs": ["TLA"], "wc": null, "offered": ["Spring", "Winter"]}
{"course_code": {"course_dept": "COSC", "course_number": "51"}, "course_title": "Computer Architecture", "description": "The architecture and organization of a simple computer system is studied. Topics covered include how information is represented in memory, machine-language instructions and how they can be implemented at the digital logic level and microcode level, assembly language programming, and input/output operations. Speedup techniques, such as pipelining and caching, are also covered.", "xlists": [], "prereqs": "COSC 1, ENGS 20, or placement through the Advanced Placement exam or the local placement exam.", "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "52"}, "course_title": "Full-Stack Web Development", "description": "The Web is a powerful delivery tool for complex real-time applications.\u00a0 This is an introduction to full stack Web application development \u2014 the approach of integrating numerous techniques and technologies to build modern Web applications.\u00a0 Topics include: static pages, Internet protocols, layout, markup, event-driven asynchronous programming, deployment, security, scalability, and user experience. Projects include building real-time Web applications with front-end UIs and server-side APIs.", "xlists": [], "prereqs": "COSC 10", "instructors": ["Tregubov"], "distribs": ["TAS"], "wc": null, "offered": ["Spring"]}
{"course_code": {"course_dept": "COSC", "course_number": "55"}, "course_title": "Security and Privacy", "description": "The migration of important social processes to distributed, electronic systems raises critical security and privacy issues. Precisely defining security and privacy is difficult; designing and deploying systems that provide these properties is even harder. This course examines what security and privacy mean in these settings, the techniques that might help, and how to use these techniques effectively. Our intention is to equip computer professionals with the breadth of knowledge necessary to navigate this emerging area.", "xlists": [], "prereqs": "COSC 50 or instructor permission. COSC 51 and COSC 30 are recommended.", "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "56"}, "course_title": "Digital Electronics", "description": "This course teaches classical switching theory including Boolean algebra, logic minimization, algorithmic state machine abstractions, and synchronous system design. This theory is then applied to digital electronic design. Techniques of logic implementation, from Small Scale Integration (SSI) through Application-Specific Integrated Circuits (ASICs), are encountered. There are weekly laboratory exercises for the first part of the course followed by a digital design project in which the student designs and builds a large system of his or her choice. In the process, Computer-Aided Design (CAD) and construction techniques for digital systems are learned.", "xlists": ["ENGS 031", "ENGS 20", "COSC 1", "COSC 10"], "prereqs": "ENGS 20 or COSC 1 and COSC 10", "instructors": [], "distribs": ["TLA"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "57"}, "course_title": "Compilers", "description": "Techniques for automatic translation of programming languages are discussed. The course includes a brief survey of various techniques and formalisms that can be used for describing the syntax and semantics of programming languages, for describing abstract and concrete machine architectures, and for describing program translation and transformation. This course includes a project to construct a compiler that will translate a program written in a high-level language into machine code for a conventional-architecture machine.", "xlists": [], "prereqs": "COSC 50. COSC 51 is recommended.", "instructors": ["Kommineni"], "distribs": ["TAS"], "wc": null, "offered": ["Spring"]}
{"course_code": {"course_dept": "COSC", "course_number": "58"}, "course_title": "Operating Systems", "description": "This course studies how computer operating systems allocate resources and create virtual machines for the execution of user jobs. Topics covered include storage management, scheduling, concurrent processing, shared access to files, synchronization, and data protection. Both abstract models and actual examples of operating systems will be studied.", "xlists": [], "prereqs": "COSC 50 and COSC 51", "instructors": ["Smith"], "distribs": ["TAS"], "wc": null, "offered": ["Fall"]}
{"course_code": {"course_dept": "COSC", "course_number": "59"}, "course_title": "Principles of Programming Languages", "description": "This course provides a study of the principles of programming languages. The course will focus on the similarities and differences among imperative, functional, logical, and object-oriented programming languages. Topics include formal definitions of languages and tools for automatic program translation, control structures, parameter passing, scoping, types, and functions as first-class objects. For each language category, implementation issues will be discussed, and program development strategies illustrated through programming exercises.", "xlists": [], "prereqs": "COSC 10, COSC 30 and COSC 51 are recommended.", "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "60"}, "course_title": "Computer Networks", "description": "This course focuses on the communications protocols used in computer networks: their functionality, specification, verification, implementation, and performance; and how protocols work together to provide more complex services. Aspects of network architectures are also considered. Laboratory projects are an integral part of the course in which networking concepts are explored in depth.", "xlists": [], "prereqs": "COSC 30 and COSC 50; COSC 51 is recommended", "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "61"}, "course_title": "Database Systems", "description": "This course studies the management of large bodies of data or information. This includes schemes for the representation, manipulation, and storage of complex information structures as well as algorithms for processing these structures efficiently and for retrieving the information they contain. This course will teach the student techniques for storage allocation and deallocation, retrieval (query formulation), and manipulation of large amounts of heterogeneous data. Students are expected to program and become involved in a project in which they study important aspects of a database system: ways to organize a distributed database shared by several computers; transactions that are processed locally and globally; robustness guarantees of the stored data against failure; security and data integrity guarantees from unauthorized access; privacy; object-oriented schemes for multimedia data; indexing, hashing, concurrency control, data mining, data warehousing, mobile databases and storage file structures.", "xlists": [], "prereqs": "COSC 50 or equivalent, as approved by instructor.", "instructors": ["Pierson"], "distribs": ["TAS"], "wc": null, "offered": ["Fall"]}
{"course_code": {"course_dept": "COSC", "course_number": "62"}, "course_title": "Applied Cryptography", "description": "Cryptography is the fundamental building block for establishing and maintaining trustworthy connections and communications in the Internet; it's the first line of defense for keeping adversaries from spying on credit card numbers being sent to Amazon or on whistleblower reports sent to journalists.\u00a0 This course will examine what's in this toolkit: symmetric ciphers, public-key cryptography, hash functions, pseudorandomness.\u00a0 To enable the well-cultured computer scientist to understand how these tools are used in the real world, this course will cover these topics from multiple perspectives: theoretical foundations, use in practical computing, implementation and management challenges, weaknesses and attacks, censorship circumvention, public policy questions, and prospects for the future.", "xlists": [], "prereqs": "COSC 30, COSC 50. COSC 51 and COSC 55 are recommended.", "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "63"}, "course_title": "Programming Parallel Systems", "description": "Multi-core processors are now ubiquitous in most personal computers. These are the fundamental computer-engineering building blocks for high-performance servers, blade farms, and cloud computing. In order to utilize these devices in large systems they must be interconnected through networking and collectively programmed. This hands-on system-engineering course offers students the opportunity to explore problem-solving techniques on a high-performance multi-computer containing quad-core processors. The course involves weekly programming laboratories that teach POSIX thread, UDP and TCP network, and MPI style programming techniques. These techniques are explored in the context of scalable problem solving methods applied to typical problems in science and engineering ranging from client-server sensing and data repositories, to numerical methods, gaming and decision support. All laboratories will be conducted in the C programming language and proficiency in C is required. Enrollment is limited to 30 students.", "xlists": ["ENGS 067", "ENGS 20", "COSC 50."], "prereqs": "ENGS 20 or COSC 50.", "instructors": [], "distribs": ["TLA"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "63.01"}, "course_title": "Augmented and Virtual Reality Development", "description": "This hands-on projects-based course is for developers who have completed COSC 10. It covers the technical, aesthetic, and societal issues surrounding the emerging frontiers of digitally mediated realities. Students learn the fundamentals of augmented and virtual reality development, while working in small interdisciplinary teams with digital arts students who are concurrently enrolled in COSC 23.01. COSC 63.01 and COSC 23.01 have class together and work together on teams. Developers in this course build interactive digital tools, games, and visualizations, while designers create assets and the interface. This course will also address the sociological implications of the technology. This course is not open to students who have received credit for COSC 29.22 or COSC 89.22.", "xlists": [], "prereqs": "COSC 10", "instructors": ["Mahoney"], "distribs": ["TAS"], "wc": null, "offered": ["Fall", "Winter"]}
{"course_code": {"course_dept": "COSC", "course_number": "65"}, "course_title": "Smartphone Programming", "description": "This course teaches students how to design, implement, test, debug and publish smartphone applications. Topics include development environment, phone emulator, key programming paradigms, UI design including views and activities, data persistence, messaging and networking, embedded sensors, location based services (e.g., Google Maps), cloud programming, and publishing applications. Concepts are reinforced through a set of weekly programming assignments and group projects.", "xlists": ["ENGS 069", "COSC 10"], "prereqs": "COSC 10", "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "66"}, "course_title": "Game Development Principles Applied In Educational/Serious Games", "description": "Digital games are a growing platform for education, entertainment, and visualization with a myriad of technological and theoretical challenges. This course explores the concepts and techniques involved in developing real-time 2D and 3D games, as well as the opportunities and constraints when applied to the field of serious games in areas such as education, healthcare, scientific visualization, emergency planning and response, government, and engineering. Topics include: 2d and 3d game engines, game ai, procedural generation, real-time rendering pipelines, game physics, shaders, game programming patterns, networked games, state synchronization, and game mechanics. Projects include building games from scratch such as an online multiplayer game with a server-side component.", "xlists": [], "prereqs": "COSC 10 or permission of the Instructor", "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "67"}, "course_title": "Introduction to Human-Computer Interaction", "description": "This course provides the fundamentals of human-computer interaction, including human factors, usability, user-centered design, prototyping, and usability evaluation. Students will learn the skills and knowledge to identify users\u2019 needs and limitations through observations and interviews. They will experience rapid prototyping and will learn common HCI evaluation techniques, such as qualitative and quantitative methods, to evaluate their designs and implementations. Additionally, students will be exposed to the state-of-the-art research within HCI.", "xlists": [], "prereqs": "COSC 10", "instructors": ["Prioleau"], "distribs": ["TAS"], "wc": null, "offered": ["Spring"]}
{"course_code": {"course_dept": "COSC", "course_number": "68"}, "course_title": "Advanced Operating Systems", "description": "This course covers advanced topics in operating systems, including issues such as thehardware/software interface, operating-system structure, CPU scheduling, concurrency, virtual memory, interprocess communication, file systems, protection, security, fault tolerance, and transaction processing. The course also considers many of these topics in the context of distributed systems.", "xlists": [], "prereqs": "A grade of B+ or better in COSC 58/258, or passing an examination administered by the department to demonstrate competency in the material of COSC 58/258.", "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "69"}, "course_title": "Topics in Computer Systems", "description": "This course studies an advanced topic in computer systems that is not covered in the regular curriculum. Students may take courses under this rubric multiple times, subject to the restriction that the topics are distinct. The subject material under this rubric differs from course to course depending on the instructor. Please refer to individual courses for detailed instruction.", "xlists": ["COSC 169"], "prereqs": "Vary according to the topic.  Consult with the instructor.", "instructors": ["Quattrini Li (Fall)"], "distribs": [], "wc": null, "offered": ["Fall"]}
{"course_code": {"course_dept": "COSC", "course_number": "69.08"}, "course_title": "All Things Wireless", "description": "This is a topics course about use and development of wireless devices.", "xlists": [], "prereqs": "COSC 60.", "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "69.11"}, "course_title": "Mobile X", "description": "Mobile X is an upper-level course on mobile computing and ubiquitous systems, covering a broad range of advanced and interdisciplinary topics in mobile systems, networking, and applications. All these topics focus on tackling unique challenges faced on bringing computation, networking, and applications to the mobile computing platform -- a platform that is constrained in form factor, energy, and computation power. Example topics include mobile communication and networking, mobile human-to-computer interaction (HCI), mobile learning/AI, mobile health, and mobile security.", "xlists": [], "prereqs": [], "instructors": [""], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "69.13"}, "course_title": "Multirobot Systems", "description": "Multirobot Systems is a seminar-course that will explore why multirobot systems are important, the extra challenges that need to be addressed, and the current state of the art in deploying multiple robots. Students will learn the computational aspects of multiagent and multirobot systems, including sensing, coordination, and communication, and will have the opportunity to develop and evaluate a behavior on a real multirobot system. ", "xlists": [], "prereqs": [], "instructors": [], "distribs": ["TAS"], "wc": null, "offered": ["Fall"]}
{"course_code": {"course_dept": "COSC", "course_number": "69.14"}, "course_title": "Functional Programming in Haskell", "description": "This course teaches a different approach to programming. In functional programming, we treat programs like values. The type of that value tells you what the program might do and restricts the possible buggy programs that don\u2019t do what you want them to do. In Haskell, you direct the type system to help improve your productivity, and your code\u2019s maintainability, by ensuring that certain bugs yield uncompilable code. Haskell programming is a recommended skill, regardless of whether you have a direct need for it. Programming in Haskell is not difficult, but has a steep learning curve when attempting to learn it on your own. Hence this course won\u2019t be easy, but it will help you through the difficult part. We use the latest GHC compiler, which is the most commonly used Haskell compiler in industry.", "xlists": [], "prereqs": "COSC 10. COSC 30 is recommended.", "instructors": [], "distribs": [], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "69.15"}, "course_title": "Robotics Perception Systems", "description": "This seminar course focuses on the issues and approaches to process and fuse data from robotics perception systems to enable robot autonomy, e.g., self-driving cars. The course will be very hands-on: some preliminary assignments will immerse you in the robotics world and how to process the sensor data for situational awareness. Through selected papers taken from the literature, students will learn different aspects of robotics perception systems, including computer vision, simultaneous localization and mapping, and machine learning. In addition, students will learn how to critically analyze a paper and how to effectively communicate a research work, by writing a summary on each paper, and presenting and discussing papers in class. Towards the end, students will work in a team on a final project that involves the use of a mobile robot with an RGBD camera and LIDAR. The professor will draw from his experiences in robotic research to enrich the material with aspects of active research problems, such as robot exploration for search and rescue and environmental coral reef monitoring using underwater robots.", "xlists": [], "prereqs": "COSC 70/70.01 (formerly COSC 11). COSC 50 is recommended.", "instructors": [], "distribs": [], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "69.16"}, "course_title": "Basics of Reverse Engineering", "description": "Frequently, the source code for an important operating system component, malware, or piece of commercial software is not available. This course explores the art and science of reverse engineering such systems to discover how they work, how they connect to other systems, and how they may be controlled. In this course, you will develop an understanding of how systems and development tool chains are built \"under the hood\". You will learn to read compiled binaries without available source code, to recover program logic, and to modify (de)compiled binaries. We will seek to understand the challenges of reverse engineering larger programs, and of automating reverse engineering.", "xlists": [], "prereqs": [], "instructors": [], "distribs": [], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "70"}, "course_title": "Foundations of Applied Computer Science", "description": "This course introduces core computational and mathematical techniques for data analysis and\u00a0physical modeling, foundational to applications including computational biology, computer\u00a0vision, graphics, machine learning, and robotics. The approaches covered include modeling and\u00a0optimizing both linear and nonlinear systems, representing and computing with uncertainty,\u00a0analyzing multi-dimensional data, and sampling from complex domains. The techniques are\u00a0both grounded in mathematical principles and practically applied to problems from a broad\u00a0range of areas.\u00a0Not open to students who have received credit for COSC 70.01.", "xlists": [], "prereqs": "MATH 3, COSC1 required, COSC 10 recommended", "instructors": ["Zhu (Fall)", "Jarosz (Winter)", "Zhu (Spring)"], "distribs": ["QDS"], "wc": null, "offered": ["Fall", "Spring", "Winter"]}
{"course_code": {"course_dept": "COSC", "course_number": "71"}, "course_title": "Numerical Methods in Computation", "description": "A study and analysis of important numerical and computational methods for solving engineering and scientific problems. The course will include methods for solving linear and nonlinear equations, doing polynomial interpolation, evaluating integrals, solving ordinary differential equations, and determining eigenvalues and eigenvectors of matrices. The student will be required to write and run computer programs.", "xlists": ["ENGS 091", "MATH 026", "COSC 1", "COSC 10", "ENGS 20", "ENGS 22", "MATH 23"], "prereqs": "COSC 1 and COSC 10, or ENGS 20; ENGS 22 or MATH 23, or equivalent.", "instructors": [], "distribs": ["QDS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "72"}, "course_title": "Accelerated Computational Linguistics", "description": "The study of human language from a computational perspective. This accelerated course has programming background equivalent to that provided by COSC 1 as a prerequisite. This course will survey formal models for representing linguistic objects, and statistical approaches to learning from natural language data. We will pay attention to the use of computational techniques to understand the structure of language, as well as practical engineering applications like speech recognition and machine translation. Students will implement simple algorithms for several key tasks in language processing and learning.", "xlists": ["LING 048", "COSC 01"], "prereqs": "COSC 01", "instructors": ["Coto-Solano (Linguistics)"], "distribs": ["TAS"], "wc": null, "offered": ["Spring"]}
{"course_code": {"course_dept": "COSC", "course_number": "73"}, "course_title": "Computational Aspects of Digital Photography", "description": "Computational photography lies at the intersection of photography, computer vision, image processing, and computer graphics. At it\u2019s essence, it is about leveraging the power of digital computation to overcome limitations of traditional photography. The course will cover the optics of cameras and sensors, how cameras form images, and how we can represent them digitally on a computer. We will focus on software techniques like image processing algorithms for photography, high-dynamic-range photography and tone mapping, and the math and algorithms behind popular image manipulation tools like Photoshop. Coursework will include taking some photos and implementing several algorithms to manipulate those photos in weekly programming assignments (in C  ). We will also read, present and discuss recent research papers in the field. By the end of the term, students should have an understanding of the capabilities and limitations of photography today, and have sufficient background to implement new solutions to photography challenges.", "xlists": [], "prereqs": "COSC 10 and COSC 70; COSC 50 is recommended or instructor permission", "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "74"}, "course_title": "Machine Learning and Statistical Data Analysis", "description": "This course provides an introduction to statistical modeling and machine learning. Topics include learning theory, supervised and unsupervised machine learning, statistical inference and prediction, and data mining. Applications of these techniques to a wide variety of data sets will be described.", "xlists": [], "prereqs": "COSC 1 or ENGS 20; COSC 70/70.1(formerly COSC 11), or MATH 22, or MATH 24.", "instructors": ["Vosoughi", "Preum (Winter)", "Vosoughi (Spring)"], "distribs": ["QDS"], "wc": null, "offered": ["Spring", "Winter"]}
{"course_code": {"course_dept": "COSC", "course_number": "75"}, "course_title": "Introduction to Bioinformatics", "description": "Bioinformatics is broadly defined as the study of molecular biological information, and this course introduces computational techniques for the analysis of biomolecular sequence, structure, and function. While the course is application-driven, it focuses on the underlying algorithms and information processing techniques, employing approaches from search, optimization, pattern recognition, and so forth. The course is hands-on: programming lab assignments provide the opportunity to implement and study key algorithms.", "xlists": [], "prereqs": "COSC 10; COSC 70/70.01 (formerly COSC 11), or MATH 22, or MATH 24. COSC 30 is recommended.", "instructors": [], "distribs": ["TLA"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "76"}, "course_title": "Artificial Intelligence", "description": "An introduction to the field of Artificial Intelligence. Topics include games, robotics, motion planning, knowledge representation, logic and theorem proving, probabilistic reasoning over time, understanding of natural languages, and discussions of human intelligence.", "xlists": [], "prereqs": "COSC 10. COSC 30 is recommended.", "instructors": ["Vosoughi (Fall)"], "distribs": ["TAS"], "wc": null, "offered": ["Fall"]}
{"course_code": {"course_dept": "COSC", "course_number": "77"}, "course_title": "Computer Graphics", "description": "This course provides a broad introduction to the mathematical and programmatic foundations of computer graphics, including modeling, rendering (drawing), and animating three-dimensional scenes. Topics include digital image representation, two- and three-dimensional shape representations (e.g. parametric curves and surfaces, meshes, subdivision surfaces), geometrical transformations (e.g. rotations, scales, translations, and perspective projection), rigging and skinning, the rasterization pipeline, ray tracing, illumination and shading models, texturing, and light & visual perception. Coursework typically includes a mix of programming assignments, quizzes/hand-written work, assigned readings, and a final project. Knowledge of basic linear algebra and programming skills are assumed.", "xlists": [], "prereqs": "COSC 50; COSC 70/70.01 (formerly COSC 11) or MATH 22/24; or instructor permission if the above two prereqs not fulfilled.", "instructors": ["Jarosz"], "distribs": ["TAS"], "wc": null, "offered": ["Spring"]}
{"course_code": {"course_dept": "COSC", "course_number": "78"}, "course_title": "Deep Learning", "description": "This course provides an introduction to deep learning, a methodology to train hierarchical machine learning models using large collections of examples. Deep learning is a special form of machine learning where rich data representations are simultaneously learned with the model, thus eliminating the need to engineer features by hand.The course begins with a comprehensive study of feedforward neural networks, which are the model of choice for most hierarchical representation learning algorithms. Other models covered in this course include convolutional neural networks, restricted Boltzmann machines, autoencoders, sparse codes. Several lectures are devoted to discuss strategies to improve the bias-variance tradeoff, such as regularization, data augmentation, pre-training, dropout, and multi-task learning. The course also studies modern applications of deep learning, such as image categorization, speech recognition, and natural language processing.", "xlists": [], "prereqs": "COSC 74", "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "81"}, "course_title": "Principles of Robot Design and Programming", "description": "This course is a hands-on introduction to robotics. Students will build robots, program robots, and learn to mathematically model and analyze manipulation and locomotion tasks. Topics include kinematics and dynamics of rigid-body motion, motion planning, control, mechanics of friction and contact, grasping, sensing, uncertainty in robotics, and applications of robots.", "xlists": [], "prereqs": "COSC 70/70.01 (formerly COSC 11), or COSC 01 and Math 22/24. COSC 10 and COSC 50 are recommended.", "instructors": ["Quattrini Li"], "distribs": ["TLA"], "wc": null, "offered": ["Spring"]}
{"course_code": {"course_dept": "COSC", "course_number": "83"}, "course_title": "Computer Vision", "description": "This course provides an introduction to computer vision, the art of teaching computers to see. Topics include image formation, feature detection, segmentation, 3D reconstruction from multiple views, motion estimation, and object recognition.", "xlists": [], "prereqs": "COSC 1 or ENGS 20; COSC 70/70.01 (formerly COSC 11), or MATH 22, or MATH 24.", "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "84"}, "course_title": "Mathematical Optimization and Modeling", "description": "Planning, scheduling, and design problems in large organizations, economic or engineering systems can often be modeled mathematically using variables satisfying linear equations and inequalities. This course explores these models: the types of problems that can be handled, their formulation, solution, and interpretation. It introduces the theory underlying linear programming, a natural extension of linear algebra that captures these types of models, and also studies the process of modeling concrete problems, the algorithms to solve these models, and the solution and analysis of these problems using a modeling language. It also discusses the relation of linear programming to the more complex frameworks of nonlinear programming and integer programming. These paradigms broaden linear programming to respectively allow for nonlinear equations and inequalities, or for variables to be constrained to be integers.", "xlists": [], "prereqs": "COSC 1 or ENGS 20; COSC 70/70.01 (formerly COSC 11), or MATH 22 or MATH 24; or permission of the instructor.", "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "86"}, "course_title": "Computational Structural Biology", "description": "Computational methods are helping provide an understanding of how the molecules of life function through their atomic-level structures, and how those structures and functions can be applied and controlled. This course will introduce the wide range of complex and fascinating challenges and approaches in computational structural biology, and will give hands-on experience applying and implementing some important methods.", "xlists": [], "prereqs": "COSC 10 or permission of the instructor.", "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "87"}, "course_title": "Rendering Algorithms", "description": "This class is intended for students interested in obtaining a deep technical understanding of the physically based rendering techniques used to produce photorealistic images in animated films, visual effects, or architectural and product visualizations.Students will learn how light behaves and interacts with objects in the real world and how to translate the underlying math and physics into practical algorithms for creating photorealistic images. The course will provide a detailed treatment of the industry-standard Monte Carlo methods for light transport simulation, such as path tracing, bidirectional path tracing, and photon mapping. Each major topic will also be accompanied by a programming assignment where students implement these algorithms within their own software framework to obtain practical experience. Additional coursework includes quizzes/handwritten exercises and assigned readings. At the end of the term, each student will work on a self-directed final project that extends their rendering software with additional features of their own choosing with the goal of creating a photorealistic image.", "xlists": [], "prereqs": "COSC 70/70.01 (formerly COSC 11) and COSC 50; or Instructor's Permission.", "instructors": ["Jarosz"], "distribs": ["TAS"], "wc": null, "offered": ["Fall"]}
{"course_code": {"course_dept": "COSC", "course_number": "89"}, "course_title": "Topics in Applied Computer Science", "description": "This course studies an advanced topic in applied Computer Science that is not covered in the regular curriculum. Students may take courses under this rubric multiple times, subject to the restriction that the topics are distinct. The subject material under this rubric differs from course to course depending on the instructor. Please refer to individual courses for detailed instruction.", "xlists": ["COSC 189"], "prereqs": "Vary according to the topic. Consult with the instructor.", "instructors": ["Fall (Prioleau)", "Winter (Preum)"], "distribs": [], "wc": null, "offered": ["Fall", "Winter"]}
{"course_code": {"course_dept": "COSC", "course_number": "89.11"}, "course_title": "Cognitive Computing with Watson", "description": "Building a computer program capable of answering questions with human-level competence has been one of the grand challenges of Artificial Intelligence. IBM\u2019s Watson system has achieved remarkable results. This class will explore the AI methods used in Watson. Topics include: natural language processing, knowledge representation, automated reasoning, machine learning, and information retrieval. Students will work in teams to develop applications that use Watson as a Cloud Service in some novel way. This class will be one of few in the world to use Watson, helping to shape the future of \u201cCognitive Computing.\u201d The class will focus on projects and group work that culminates in building a novel application for question answering. Student teams will benefit from drawing on experience from various other classes, including data mining, information retrieval, natural-language processing, mobile computing and entrepreneurship. Understanding the strengths and limitations of current question-answering technology will be key to a successful application. We will read and discuss research publications on various aspects of the technology, primarily focused on the Watson system.", "xlists": [], "prereqs": "COSC 50", "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "89.13"}, "course_title": "Robot Motion Planning", "description": "This is a small advanced seminar course in robotic motion planning.\u00a0 Topics to be covered include configuration space, forwards and inverse kinematics, differential kinematics, representations for motion planning, and classical planning algorithms including cell-decomposition and probabilistic methods. ", "xlists": ["COSC 189", "COSC 1", "COSC 10", "MATH 8"], "prereqs": "COSC 1, COSC 10, MATH 8", "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "89.14"}, "course_title": "Research Topics in Human-Computer Interaction", "description": "This is a topics course in Human-computer Interaction. The course is designed to introduce students to advanced HCI research methods and techniques, including observation, design, implementation, and evaluation. It will also expose students to state-of-the-art research topics in HCI, including interaction techniques, actuated interfaces, ubiquitous computing, context-aware computing, tangible interfaces, mobile interfaces, and wearable interfaces. This course involves a mix of lectures given by professor and students with a major focus on the discussion of selected papers from ACM SIGCHI or ACM UIST Conference Proceedings.", "xlists": [], "prereqs": "COSC 67, COSC 167", "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "89.18"}, "course_title": "Computational Methods for Physical Systems", "description": "The Physical Computing course introduces students to mathematical concepts and algorithmic techniques for developing computational approaches to simulate, optimize, design, and control various physical systems. Course topics cover fundamental numerical approaches for modeling and simulating rigid body, soft body, and cloth, as well as design and optimization algorithms for drones and soft robots. The materials will be illustrated using examples and applications from physics-based animation, robot design, fashion design, and 3D printing.", "xlists": [], "prereqs": "COSC 10", "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "89.19"}, "course_title": "Machine Learning for Robotics", "description": "Machine Learning for Robotics is a course mixed with lectures, students\u2019 presentations, and assignments that explore machine learning techniques for robotics applications. After a review of some supervised and unsupervised machine learning techniques, we will focus on some specific ones, currently popular in robotics, including reinforcement and deep learning. Students will have the opportunity to use machine learning frameworks for some robotics problems.\r\n\\f\r\n\\f \\f ", "xlists": [], "prereqs": "COSC 11 and COSC 50", "instructors": [], "distribs": ["QDS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "89.20"}, "course_title": "Data Science for Health", "description": "Data science is being employed across diverse fields to improve human sensing and health. However, there are still many untapped opportunities. This course will cover state-of-the-art methods for data acquisition and analysis, with an emphasis on interpretation of behavioral and physiological data. Students will develop their skills by reading, presenting, and critiquing seminal research papers in the health space. The course will also include assignments and a group project to reinforce concepts and methods widely used in data science.", "xlists": [], "prereqs": "COSC 74 or instructor permission", "instructors": ["Prioleau"], "distribs": ["QDS"], "wc": null, "offered": ["Fall"]}
{"course_code": {"course_dept": "COSC", "course_number": "89.21"}, "course_title": "Data Mining and Knowledge Discovery", "description": "This course introduces the basic concepts, principles, methods, implementation techniques, and applications of data mining. The course covers all the steps required to turn raw data into meaningful insights, including: obtaining and cleaning data, pattern discovery, and data visualisation. Throughout the course, students will work on data mining projects using real-world data to gather hands-on experience. The course will be taught in Python.", "xlists": [], "prereqs": "COSC 10; adequate knowledge of probability and statistics through a course such as COSC 74 or Math 10, or the permission of the instructor.", "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "89.23"}, "course_title": "Network Science and Complex Systems", "description": "Many of the systems that surround us are complex. These systems span almost every scientific field of inquiry, from biological to social, and computational sciences. To understand the behavior of complex systems, we must study not only the parts but the emergent behavior that arises from such systems when the parts act together. Complex systems are by definitions highly interconnected, therefore, at the core of studying complex systems is understanding networks. This seminar is an introduction to the main concepts of networks and complex systems, and their applications. The topics covered in this course will include: network topologies, network dynamics, motifs, dynamic systems, attractors, and chaos. The seminar mainly involves reading and discussing seminal, and ongoing, works in this field, but we will also be doing hands-on modeling and studying toy and real networks using Python.", "xlists": [], "prereqs": "COSC 10; Math 3, adequate knowledge of probability and statistics through a course such as COSC 74 or Math 10.", "instructors": [], "distribs": ["TAS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "89.24"}, "course_title": "Logic and Artificial Intelligence", "description": "The goal of this topics course is to study the foundations of different types of logic used commonly in artificial intelligence. Logic forms the basis for many types of reasoning used by humans \u2013 researchers in AI have extended classical logic over the years to numerous more \u201cexotic\u201d logics. This course will cover the foundations of a host of classical and non-classical logics, a number of interesting logics developed by by AI researchers for common-sense reasoning, and applications of those logics.", "xlists": [], "prereqs": "COSC 76, COSC 176, or permission of the instructor.", "instructors": [], "distribs": [], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "89.25"}, "course_title": "GPU Programming and High Performance Computing", "description": "The GPU Computing course introduces students to the basic programming and algorithmic techniques for developing the modern parallel computer code for high-performance computing applications. Course topics will cover the fundamentals for GPU (CUDA) and CPU (multi-threading) parallel programming, parallel computer architecture, parallel data structures, parallelizable linear algebra, conjugate gradient and multigrid solvers, particle systems and N-body problems, and vectorization. The materials will be illustrated using large-scale computing examples and applications from computer graphics, computational physics, and machine learning.", "xlists": [], "prereqs": "This course assumes an understanding of multi-variable calculus and linear algebra and proficiency in C++ programming. Students are recommended to take COSC 70 as a prerequisite or to show equivalent understanding and comfortableness with the associated materials.", "instructors": [], "distribs": ["QDS"], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "89.26"}, "course_title": "Security and Privacy in the Lifecycle of IoT for Consumer Environments", "description": "We are entering an era of Smart Things, in which everyday objects become imbued with computational capabilities and the ability to communicate with each other and with services across the Internet.\u00a0 Indeed, the Internet of Things now involves the deployment of Smart Things in everyday residential environments\u00a0\u2013 houses, apartments, hotels, senior-living facilities\u00a0\u2013 resulting in Smart Homes. Although Smart Things offer many potential benefits, they can also create unsafe conditions and increase risk of harm to persons and property. This course explores the key security and privacy challenges required for the vision of Smart Homes to be safely realized, with an explicit focus on consumer-facing \u201cthings\u201d where end-user privacy and usability are essential. It will take a holistic approach to the entire lifecycle of security, privacy, and usability challenges from the perspective of the everyday consumer who interacts with Smart Things (intentionally or unintentionally) in a residential setting. Students will read, present, and discuss papers from the research literature; write a survey paper about a subset of the research literature; and conduct a security analysis of a current commercial \u201csmart thing\u201d. Guest lecturers will join the class, weekly, to share expertise from both industry and research.", "xlists": [], "prereqs": "Required: COSC 50, and experience or willingness to read technical research literature. Useful: COSC 55, 58, 60, 62, 67, 91.", "instructors": [], "distribs": [], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "89.27"}, "course_title": "Security and Privacy of Machine Learning", "description": "Today we see applications of machine learning almost everywhere we look \u2013 in the domains of autonomous driving, medical diagnosis, fraud detection, etc. While the use of machine learning is increasing in our day-to-day lives, these techniques also pose significant threats to security and data privacy. This course will explore recent academic research at the intersection of machine learning, security, and data privacy that demonstrates the risks adversaries pose to machine learning systems. The research papers explored in this course would cover attacks on machine learning systems as well as defense techniques to mitigate such attacks. Students will read, analyze, and discuss research papers, write summaries, take notes, and undertake a term-long research project.", "xlists": [], "prereqs": "COSC 74. Assumes that students understand basics of machine learning. Knowledge of security & privacy useful but not required if students are willing/able to learn background materials on their own.", "instructors": [], "distribs": [], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "89.28"}, "course_title": "Transforming Healthcare through Machine Learning: Challenges and Opportunities", "description": "Machine Learning (ML) lies at the core of a wide range of healthcare applications spanning from diagnosis to delivery of care. This course gives an overview of challenges and opportunities for ML in the era of digital health. We will explore advanced ML methods for healthcare and medicine through research papers. Specifically, we will cover recent successes of natural language processing, time-series analysis, and transfer learning to advance healthcare research. Students will choose and complete a course project, write a project report, and make project presentations at the end of the course. The course also requires the students to analyze, present, and discuss research papers. The course is open to graduate and ambitious undergraduate students who are interested to gain hands-on experience in applied ML research. The course is designed to enable students to improve their technical communication and review skills and explore new research directions. It is important to note that this course will be conducted like a seminar (i.e. there are no formal lectures). We assume students are willing and able to learn some necessary background materials on their own. There will be office hours outside of scheduled class lectures.", "xlists": [], "prereqs": [], "instructors": [], "distribs": [], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "91"}, "course_title": "Writing, Presenting, and Evaluating Technical Papers in Computer Science", "description": "Students will learn how to write technical papers in computer science, how to present technical papers in a conference-talk setting, and how program committees and journal editors evaluate technical papers. Writing topics include the proper use of technical typesetting software, organization of technical papers, and English usage. Students will write technical papers, produce official course notes, and give oral presentations. Enrollment limited.  ", "xlists": [], "prereqs": "Each student must submit a short expository piece to be evaluated by the instructor at the start of the course; only those students meeting a required level of competence will be permitted to take the course for a grade. Students should also have a Computer Science background sufficient to understand research papers.", "instructors": [], "distribs": [], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "94"}, "course_title": "Reading Course", "description": "Advanced undergraduates occasionally arrange with a faculty member a reading course in a subject not occurring in regular courses.", "xlists": [], "prereqs": [], "instructors": [], "distribs": [], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "98.01"}, "course_title": "Senior Design and Implementation Project I", "description": "Participation in a software engineering group project to meet a real-world need. Group members are responsible for all aspects of a software system, including iterative requirements analysis, design, implementation, and testing. The course also stresses customer interactions, documentation, process, and teamwork. The result is a software product of significant scope and significant benefit to a user base. Open only to students pursuing a major in Computer Science or a modified major with Computer Science as the primary part. \u00a098.01 and 98.02 constitute a two course sequence, and they must be taken in consecutive terms, either fall/winter or winter/spring, normally in the senior year. Students are awarded one course credit for successful completion of this course upon completion of COSC-98.02 Students register for COSC-98.01 and receive a grade of \u201cON\u201d (ongoing) at the end of the term.\u00a0 Students then register for COSC-98.02 the subsequent term to complete the coursework. A final grade will replace the \u201cON\u201d in COSC-98.01 upon completion of COSC-98.02.", "xlists": [], "prereqs": "At least two courses from COSC 50-69 or at least three courses from COSC 50-89, or permission of instructor.", "instructors": [], "distribs": [], "wc": null, "offered": ["Fall", "Winter"]}
{"course_code": {"course_dept": "COSC", "course_number": "98.02"}, "course_title": "Senior Design and Implementation Project II", "description": "Participation in a software engineering group project to meet a real-world need. Group members are responsible for all aspects of a software system, including iterative requirements analysis, design, implementation, and testing. The course also stresses customer interactions, documentation, process, and teamwork. The result is a software product of significant scope and significant benefit to a user base. Open only to students pursuing a major in Computer Science or a modified major with Computer Science as the primary part. 98.01 and 98.02 constitute a two course sequence, and they must be taken in consecutive terms, either fall/winter or winter/spring, normally in the senior year. Students are awarded one course credit for successful completion of this course. Students who have registered for COSC-98.01 register for COSC-98.02 to complete the coursework. A final grade will replace the \u201cON\u201d for COSC-98.01 upon completion of this course for a total of 2 credits for COSC-98.01 and COSC-98.02.", "xlists": [], "prereqs": "COSC 98.01", "instructors": [], "distribs": [], "wc": null, "offered": ["Spring", "Winter"]}
{"course_code": {"course_dept": "COSC", "course_number": "99.01"}, "course_title": "Thesis Research I", "description": "Individual research on a topic along with a thesis advisor. Permission of the Undergraduate Program Director and thesis advisor required. Open only to students pursuing a major in Computer Science or a modified major with Computer Science as the primary part. COSC 99.01 and 99.02 constitute a two-course sequence and must be taken in two consecutive terms, either fall/winter or winter/spring, normally in the senior year.\u00a0 In order to receive credit for COSC 99.01 and 99.02, a written thesis must be approved by the thesis advisor. A final grade will replace the \u2018ON\u2019 for COSC 99.01 after completing COSC 99.02.", "xlists": [], "prereqs": [], "instructors": [], "distribs": [], "wc": null, "offered": []}
{"course_code": {"course_dept": "COSC", "course_number": "99.02"}, "course_title": "Thesis Research II", "description": "Individual research on a topic along with a thesis advisor. Permission of the Undergraduate Program Director and thesis advisor required. Open only to students pursuing a major in Computer Science or a modified major with Computer Science as the primary part. COSC 99.01 and 99.02 constitute a two-course sequence and must be taken in two consecutive terms, either fall/winter or winter/spring, normally in the senior year.\u00a0 In order to receive credit for COSC 99.01 and 99.02, a written thesis must be approved by the thesis advisor. A final grade will replace the \u2018ON\u2019 for COSC 99.01 after completing COSC 99.02.", "xlists": [], "prereqs": "COSC 99.01", "instructors": [], "distribs": [], "wc": null, "offered": []}